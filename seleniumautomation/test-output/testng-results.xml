<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="25557" started-at="2020-07-27T09:16:02 IST" finished-at="2020-07-27T09:16:28 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="25557" started-at="2020-07-27T09:16:02 IST" finished-at="2020-07-27T09:16:28 IST">
      <class name="testPackage.LoginTest">
        <test-method status="PASS" signature="BaseClass()[pri:0, instance:testPackage.LoginTest@74650e52]" name="BaseClass" is-config="true" duration-ms="10287" started-at="2020-07-27T09:16:02 IST" finished-at="2020-07-27T09:16:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseClass -->
        <test-method status="PASS" signature="initObjects()[pri:0, instance:testPackage.LoginTest@74650e52]" name="initObjects" is-config="true" duration-ms="1" started-at="2020-07-27T09:16:12 IST" finished-at="2020-07-27T09:16:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initObjects -->
        <test-method status="PASS" signature="Mediwarelogin()[pri:1, instance:testPackage.LoginTest@74650e52]" name="Mediwarelogin" duration-ms="6041" started-at="2020-07-27T09:16:12 IST" finished-at="2020-07-27T09:16:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mediwarelogin -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testPackage.LoginTest@74650e52]" name="getResult" is-config="true" duration-ms="10" started-at="2020-07-27T09:16:19 IST" finished-at="2020-07-27T09:16:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Mediwarelogin status=SUCCESS method=LoginTest.Mediwarelogin()[pri:1, instance:testPackage.LoginTest@74650e52] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="MediwareAppoinment()[pri:2, instance:testPackage.LoginTest@74650e52]" name="MediwareAppoinment" duration-ms="9039" started-at="2020-07-27T09:16:19 IST" finished-at="2020-07-27T09:16:28 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:968)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testPackage.LoginTest.MediwareAppoinment(LoginTest.java:67)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MediwareAppoinment -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testPackage.LoginTest@74650e52]" name="getResult" is-config="true" duration-ms="5" started-at="2020-07-27T09:16:28 IST" finished-at="2020-07-27T09:16:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MediwareAppoinment status=FAILURE method=LoginTest.MediwareAppoinment()[pri:2, instance:testPackage.LoginTest@74650e52] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="PatietSearch()[pri:3, instance:testPackage.LoginTest@74650e52]" name="PatietSearch" duration-ms="110" started-at="2020-07-27T09:16:28 IST" finished-at="2020-07-27T09:16:28 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:968)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testPackage.LoginTest.PatietSearch(LoginTest.java:87)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PatietSearch -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testPackage.LoginTest@74650e52]" name="getResult" is-config="true" duration-ms="12" started-at="2020-07-27T09:16:28 IST" finished-at="2020-07-27T09:16:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PatietSearch status=FAILURE method=LoginTest.PatietSearch()[pri:3, instance:testPackage.LoginTest@74650e52] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testPackage.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
