<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="25006" started-at="2020-07-26T15:14:21Z" finished-at="2020-07-26T15:14:46Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="25006" started-at="2020-07-26T15:14:21Z" finished-at="2020-07-26T15:14:46Z">
      <class name="testPackage.LoginTest">
        <test-method status="PASS" signature="BaseClass()[pri:0, instance:testPackage.LoginTest@90f6bfd]" name="BaseClass" is-config="true" duration-ms="9493" started-at="2020-07-26T15:14:21Z" finished-at="2020-07-26T15:14:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseClass -->
        <test-method status="PASS" signature="initObjects()[pri:0, instance:testPackage.LoginTest@90f6bfd]" name="initObjects" is-config="true" duration-ms="1" started-at="2020-07-26T15:14:31Z" finished-at="2020-07-26T15:14:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initObjects -->
        <test-method status="PASS" signature="Mediwarelogin()[pri:1, instance:testPackage.LoginTest@90f6bfd]" name="Mediwarelogin" duration-ms="6274" started-at="2020-07-26T15:14:31Z" finished-at="2020-07-26T15:14:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mediwarelogin -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testPackage.LoginTest@90f6bfd]" name="getResult" is-config="true" duration-ms="9" started-at="2020-07-26T15:14:37Z" finished-at="2020-07-26T15:14:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Mediwarelogin status=SUCCESS method=LoginTest.Mediwarelogin()[pri:1, instance:testPackage.LoginTest@90f6bfd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="MediwareAppoinment()[pri:2, instance:testPackage.LoginTest@90f6bfd]" name="MediwareAppoinment" duration-ms="9060" started-at="2020-07-26T15:14:37Z" finished-at="2020-07-26T15:14:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testPackage.LoginTest.MediwareAppoinment(LoginTest.java:67)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MediwareAppoinment -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testPackage.LoginTest@90f6bfd]" name="getResult" is-config="true" duration-ms="14" started-at="2020-07-26T15:14:46Z" finished-at="2020-07-26T15:14:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MediwareAppoinment status=FAILURE method=LoginTest.MediwareAppoinment()[pri:2, instance:testPackage.LoginTest@90f6bfd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="PatietSearch()[pri:3, instance:testPackage.LoginTest@90f6bfd]" name="PatietSearch" duration-ms="117" started-at="2020-07-26T15:14:46Z" finished-at="2020-07-26T15:14:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testPackage.LoginTest.PatietSearch(LoginTest.java:87)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PatietSearch -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testPackage.LoginTest@90f6bfd]" name="getResult" is-config="true" duration-ms="3" started-at="2020-07-26T15:14:46Z" finished-at="2020-07-26T15:14:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PatietSearch status=FAILURE method=LoginTest.PatietSearch()[pri:3, instance:testPackage.LoginTest@90f6bfd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testPackage.LoginTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
